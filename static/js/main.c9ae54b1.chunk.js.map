{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Section","title","children","className","styles","section","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","nameInputId","nanoid","numberInputId","addContact","preventDefault","props","changeContact","onSubmit","this","label","htmlFor","input","type","onChange","id","pattern","required","btnAdd","Component","ContactList","contacts","deleteFunction","renderContacts","map","contactsListItem","onClick","btnDelete","contactsList","Filter","filter","filterInputId","App","find","contact","toLowerCase","alert","newContact","prevState","deleteContact","contactId","getFiltered","normalizeFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","newContactsList","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9ae54b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Uu0L\",\"title\":\"Section_title__2-IbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__10-07\",\"label\":\"Filter_label__ZRNqb\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css'\n\nconst Section = ({ title, children}) => {\n    return (<section className={styles.section}><h1 className={styles.title}>{title}</h1>\n    {children}</section>\n    )\n};\n\nexport default Section;\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node\n}","import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\"\n\nclass ContactForm extends Component { \n    state = {\n        name: '',\n        number: ''\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    nameInputId = nanoid();\n    numberInputId = nanoid();\n    \n    \n    addContact = (event) => {\n        event.preventDefault();\n\n        this.props.changeContact(this.state.name, this.state.number);\n    \n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n\n    render() {\n        return <>\n        \n            <form onSubmit={this.addContact}>\n                <label className={styles.label} htmlFor={this.nameInputId}>Name\n                    <input className={styles.input}\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        id={this.nameInputId}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        required\n                    /></label>\n                <label className={styles.label} htmlFor={this.numberInputId}>Number\n                    <input className={styles.input}\n                        type=\"tel\"\n                        value={this.state.number}\n                        onChange={this.handleChange}\n                        id={this.numberInputId}\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        required\n                    /></label>\n                <button className={styles.btnAdd} type=\"submit\">Add contact</button>\n            </form>\n        </>;\n    }\n};\n\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n    changeContact: PropTypes.func.isRequired\n}","import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, deleteFunction }) => {\n    const renderContacts = contacts.map(({id, name, number}) => (\n        <li key={name} className={styles.contactsListItem}>{name} {number}\n        <button onClick={() => deleteFunction(id)} className={styles.btnDelete} >X</button>\n        </li>\n        \n        ))\n\n    return ( \n        <ul className={styles.contactsList}>\n            {renderContacts }</ul>)\n}\nexport default ContactList;\n\nconst contactShape = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape(contactShape)).isRequired\n}","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\n\nconst Filter = ({ filter, handleChange,filterInputId }) => {\n  \n\n  return (\n      <>\n        <label className={styles.label} htmlFor={filterInputId}>Find contacts by name\n          <input className={styles.input}\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={handleChange}\n            id={filterInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          /></label>\n      </>)\n}\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange:PropTypes.func.isRequired\n}","\nimport { Component } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport Section from './components/Section';\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\"\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  filterInputId = nanoid();\n\n  componentDidMount() {\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    const newContactsList = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (newContactsList !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(newContactsList));\n    }\n  }\n\n  changeContact = (name, number) => {\n    if (this.state.contacts.find((contact) => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    })) {\n      alert(name + \" is already in contacts.\");\n      return;\n    }\n    const newContact = {\n      id: nanoid(),\n      name: name,\n      number: number\n    };\n    this.setState(prevState => {\n      return (\n        { contacts: [...prevState.contacts, newContact] }\n      );\n    })\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getFiltered = () => {\n    const { contacts, filter } = this.state;\n    if (!filter) {\n      return contacts;\n    }\n    const normalizeFilter = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(({ name }) => {\n      const normalizeName = name.toLowerCase();\n      const result = normalizeName.includes(normalizeFilter);\n      return result;\n    })\n\n    return filteredContacts;\n  }\n\n  render() {\n    const { getFiltered } = this;\n    const contacts = getFiltered();\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm contacts={this.state.contacts} handleChange={this.handleChange} changeContact={this.changeContact} />\n        </Section>\n        <Section title='Contacts'>\n          <Filter filter={this.state.filter} handleChange={this.handleChange} filterInputId={this.filterInputId} />\n          <ContactList contacts={contacts} deleteFunction={this.deleteContact}\n          />\n\n        </Section>\n      </>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1NqJN\",\"input\":\"ContactForm_input__364QW\",\"btnAdd\":\"ContactForm_btnAdd__2HvDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactList_contactsListItem__s4BBO\",\"btnDelete\":\"ContactList_btnDelete__1Mzs9\"};"],"sourceRoot":""}